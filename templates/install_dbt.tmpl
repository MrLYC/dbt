set -e

# URL for your trusted repository
REPO="{{.Repository}}"

# Initial version to install
VERSION="{{.Version}}"

echo "Installing DBT $VERSION..."

# Config setup
CONFIG=$(cat <<EOF
{
  "dbt": {
    "repository": "{{.Repository}}",
    "truststore": "{{.Repository}}/truststore"
  },
  "tools": {
    "repository": "{{.ToolRepository}}"
  }
}
EOF
)

# create directories
DIRS=(~/.dbt ~/.dbt/trust ~/.dbt/conf ~/.dbt/tools)

for i in ${DIRS[@]}; do
    [[ -d $i ]] || mkdir $i && chmod 700 $i
done

# write config
echo "$CONFIG" > ~/.dbt/conf/dbt.json
chmod 600 ~/.dbt/conf/dbt.json

INSTALL_DIR="/usr/local/bin"
FILE="dbt"

OS=$(echo $(uname -s) | awk '{print tolower($0)}')
ARCH=$(uname -m)

# have to translate uname to goxish
if [[ "$ARCH" =~ "x86_64" ]]; then
    ARCH="amd64"
fi

URL="$REPO/$VERSION/$OS/$ARCH/$FILE"

echo "Installing from $URL"

TDIR=$(mktemp -d)

DOWNLOAD_PATH="$TDIR/$FILE"

s3re="https://([A-Za-z-]+)\.s3\..*\.amazonaws\.com"

if [[ $REPO =~ $s3re ]]; then
  BUCKET=${BASH_REMATCH[1]}
  S3URL="s3://${BUCKET}/$VERSION/$OS/$ARCH/$FILE"
  echo "Downloading dbt from ${S3URL}"
  aws s3 cp $S3URL $DOWNLOAD_PATH
else
  echo "Downloading dbt from ${URL}"
  curl -sX GET $URL -o $DOWNLOAD_PATH
fi

if [ $? != 0 ]; then
  echo "Failed to download binary.  Installation aborted."
  exit 1
fi

if [ -w $INSTALL_DIR ] ; then
    mv $DOWNLOAD_PATH $INSTALL_DIR
    chmod 755 "$INSTALL_DIR/$FILE"
else
    sudo mv $DOWNLOAD_PATH $INSTALL_DIR
    sudo chmod 755 "$INSTALL_DIR/$FILE"

fi

rm -r $TDIR

echo "Installation complete."
